{"version":3,"sources":["utils/storage.js","utils/ageCalculator.js","components/studentCard.jsx","components/textField.jsx","components/modal.jsx","components/userForm.jsx","utils/validator.js","App.js","reportWebVitals.js","index.js"],"names":["storage","key","localStorage","getItem","JSON","parse","value","setItem","stringify","ageCalculator","yearOfBirth","age","Date","getFullYear","count","StudentCard","history","useHistory","student","className","name","surname","href","portfolio","onClick","push","TextField","label","type","onChange","error","placeholder","useState","showPassword","setShowPassword","htmlFor","id","prevState","defaultProps","ModalStudent","show","handleClose","Modal","onHide","size","centered","Header","closeButton","Body","Footer","Button","variant","UserForm","data","errors","setErrors","isUser","user","setUser","showModal","setShowModal","handleChange","target","validatorConfig","isRequired","message","isYear","isLink","useEffect","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","Object","keys","length","isValid","onSubmit","e","preventDefault","console","log","disabled","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84c40fb1.chunk.js","sourcesContent":["// https://www.youtube.com/watch?v=3-bZ7gLVSzo&ab_channel=%D0%92%D0%BB%D0%B0%D0%B4%D0%B8%D0%BB%D0%B5%D0%BD%D0%9C%D0%B8%D0%BD%D0%B8%D0%BD\n\nconst storage = {\n  get: (key) => {\n    if (localStorage.getItem(key)) {\n      return JSON.parse(localStorage.getItem(key));\n    }\n\n    return null;\n  },\n  save: (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n};\n\nexport { storage };\n","export function ageCalculator(yearOfBirth) {\n  let today = new Date().getFullYear();\n\n  let txt;\n  let age = today - yearOfBirth;\n  let count = age % 100;\n  if (count >= 5 && count <= 20) {\n    txt = \"лет\";\n  } else {\n    count = count % 10;\n    if (count === 1) {\n      txt = \"год\";\n    } else if (count >= 2 && count <= 4) {\n      txt = \"года\";\n    } else {\n      txt = \"лет\";\n    }\n  }\n  return age + \" \" + txt;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { storage } from \"../utils/storage\";\nimport { ageCalculator } from \"../utils/ageCalculator\";\n\nconst StudentCard = () => {\n  const history = useHistory();\n  const student = storage.get(\"user\");\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          <h1>Карточка Студента</h1>\n          {student ? (\n            <div className=\"mb-4\">\n              <div>\n                <span className=\"fw-bold fs-6\">Имя: </span>\n                {student.name}\n              </div>\n              <div>\n                <span className=\"fw-bold\">Фамилия: </span>\n                {student.surname}\n              </div>\n              <div>\n                <span className=\"fw-bold\">Год рождения: </span>\n                {student.yearOfBirth} ({ageCalculator(student.yearOfBirth)})\n              </div>\n              <div>\n                <span className=\"fw-bold\">Портфолио: </span>\n                <a href={student.portfolio}>{student.portfolio}</a>\n              </div>\n            </div>\n          ) : (\n            <div>Нет Данных</div>\n          )}\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => history.push(\"/userform\")}\n          >\n            {student ? \"Редактировать\" : \"Добавить\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentCard;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  error,\n  placeholder,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? \"text\" : type}\n          placeholder={placeholder}\n          id={name}\n          name={name}\n          value={value}\n          onChange={onChange}\n          className={getInputClasses()}\n        />\n        {type === \"password\" && (\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}></i>\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n  placeholder: \"\",\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ModalStudent = ({ show, handleClose }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton></Modal.Header>\n      <Modal.Body>Обновлено!</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalStudent;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport TextField from \"./textField\";\nimport { validator } from \"../utils/validator\";\nimport { storage } from \"../utils/storage\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"./modal\";\n\nconst UserForm = () => {\n  const [data] = useState({\n    name: \"\",\n    surname: \"\",\n    yearOfBirth: \"\",\n    portfolio: \"\",\n  });\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const isUser = storage.get(\"user\");\n  const [user, setUser] = useState(isUser ? isUser : data);\n  const [showModal, setShowModal] = useState(false);\n  const handleChange = ({ target }) => {\n    setUser((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const validatorConfig = {\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\",\n      },\n    },\n    surname: {\n      isRequired: {\n        message: \"Фамилия обязательна для заполнения\",\n      },\n    },\n    yearOfBirth: {\n      isRequired: {\n        message: \"Год рождения обязателен для заполнения\",\n      },\n      isYear: {\n        message: \"Год введен некорректно\",\n      },\n    },\n    portfolio: {\n      isRequired: {\n        message: \"Портфолио обязательно для заполнения\",\n      },\n      isLink: {\n        message: \"Ссылка на портфолио введена некорректно\",\n      },\n    },\n  };\n\n  useEffect(() => {\n    validate();\n  }, [user]);\n\n  const validate = () => {\n    const errors = validator(user, validatorConfig);\n\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(user);\n    storage.save(\"user\", user);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <Modal show={showModal} handleClose={handleCloseModal} />\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          <h3 className=\"mb-4\">{isUser ? \"Редактировать\" : \"Создать\"}</h3>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              label=\"Имя\"\n              name=\"name\"\n              value={user.name}\n              onChange={handleChange}\n              error={errors.name}\n            />\n            <TextField\n              label=\"Фамилия\"\n              name=\"surname\"\n              value={user.surname}\n              onChange={handleChange}\n              error={errors.surname}\n            />\n            <TextField\n              label=\"Год рождения\"\n              type=\"number\"\n              name=\"yearOfBirth\"\n              value={user.yearOfBirth}\n              onChange={handleChange}\n              error={errors.yearOfBirth}\n            />\n            <TextField\n              label=\"Портфолио\"\n              type=\"text\"\n              name=\"portfolio\"\n              value={user.portfolio}\n              onChange={handleChange}\n              error={errors.portfolio}\n            />\n            {/* <button\n              type=\"submit\"\n              disabled={!isValid}\n              className=\"btn btn-primary w-100 mx-auto\"\n            >\n              Подтвердить\n            </button> */}\n\n            {isUser && (\n              <button\n                type=\"button\"\n                onClick={() => history.push(\"/\")}\n                className=\"btn btn-secondary\"\n              >\n                Назад\n              </button>\n            )}\n            <button\n              type=\"submit\"\n              disabled={!isValid}\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#staticBackdrop\"\n              className=\"btn btn-primary\"\n            >\n              {isUser ? \"Обновить\" : \"Создать\"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserForm;\n","export function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\":\n        statusValidate = data.trim() === \"\";\n        break;\n      case \"isEmail\": {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n        statusValidate = !emailRegExp.test(data);\n        break;\n      }\n      case \"isYear\": {\n        const currentYear = new Date().getFullYear();\n        //   console.log(currentYear);\n        //   const yearRegExp = /(?:19|20)\\d\\d/g;\n        //   statusValidate = !yearRegExp.test(data) && currentYear < data;\n        statusValidate = currentYear < data || data < 1900; //от 1900 до настоящего времени\n        //   console.log(\"status \", statusValidate);\n        break;\n      }\n      case \"isLink\": {\n        const linkRegExp = /^(ftp|http|https):\\/\\/[^ \"]+$/g;\n        statusValidate = !linkRegExp.test(data);\n        break;\n      }\n      default:\n        break;\n    }\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport StudentCard from \"./components/studentCard\";\nimport UserForm from \"./components/userForm\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"student-card/userform\" component={UserForm} />\n      <Route exact path=\"/student-card/\" component={StudentCard} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}